// Initialize Firebase
var config = {
    apiKey: "AIzaSyDWMxEvXQ_dSBfXZ98kwcu3pVkS2pf-Fco",
    authDomain: "ranking-323a9.firebaseapp.com",
    databaseURL: "https://ranking-323a9.firebaseio.com",
    storageBucket: "ranking-323a9.appspot.com",
    messagingSenderId: "358238196288"
};
firebase.initializeApp(config);


var app = angular.module("app", ["firebase"]);
app.controller("myCtrl", function ($scope, $firebaseArray) {


    var userScanedRef = firebase.database().ref().child("userScaned");
    $scope.userScaned = $firebaseArray(userScanedRef);


    function compare(a, b) {
        if (a.id < b.id)
            return -1;
        if (a.id > b.id)
            return 1;
        return 0;
    }

    //load user scaned
    $scope.loadUserScaned = function () {

        $scope.userScaned.$loaded()
            .then(function () {

                $scope.userScanedMappingIdToIndex = {};


                for (var x = 0; x < $scope.userScaned.length; x++) {
                    $scope.userScanedMappingIdToIndex[$scope.userScaned[x].$id] = x;

                    if(x == $scope.userScaned.length - 1){
                        $scope.loadUserToScan();
                    }
                }
            })
            .catch(function (err) {
                console.error(err);
            });
    };
    $scope.loadUserScaned();

    //ranking pages
    $scope.ranking = function () {

        $scope.rankingPages = [];
        $scope.rankedPages = [];

        for(var x = 0; x < $scope.userToScan.length; x++){
            indexFromScaned = $scope.userScanedMappingIdToIndex[$scope.userToScan[x].$id];
            var item = $scope.userScaned[indexFromScaned];
            if(item){
                $scope.userToScan[x].scaned = true;
            } else {
                continue;
            }
            for (var y in item.likedPages) {
                $scope.rankingPages.push(item.likedPages[y]);

                if (x == $scope.userToScan.length - 1 && y == item.likedPages.length - 1) {

                    $scope.rankingPages.sort(compare);

                    var array_elements = $scope.rankingPages;


                    var lastItem = {id: null};
                    var cnt = 0;

                    for (var i = 0; i < array_elements.length; i++) {

                        //Nếu item thứ 2 giống item thứ 1 thì số lượng item tăng lên 1, và tiếp tục kiểm tra item thứ 3 với item 1
                        if (array_elements[i].id == lastItem.id) {
                            cnt++;
                        } else {
                            //Nếu item sau ko bằng item trước, thì item trước đã kết thúc. Khi đó in ra số lượng của item trước
                            if (cnt > 0) {
                                lastItem.count = cnt;
                                $scope.rankedPages.push(lastItem);
                            }
                            //Khởi tạo item để so sánh
                            lastItem = array_elements[i];
                            cnt = 1;
                        }
                    }

                    if (cnt > 0) {
                        lastItem.count = cnt;
                        $scope.rankedPages.push(lastItem);

                    }
                }
            }

        }

    };

    //load user to scan
    $scope.loadUserToScan = function () {

        var userToScanRef = firebase.database().ref().child("userToScan");
        $scope.userToScan = $firebaseArray(userToScanRef);
        $scope.userToScan.$loaded()
            .then(function () {
                $scope.ranking();
            })
            .catch(function (err) {
                console.error(err);
            });
    };

    $scope.scanUser = function (id) {
        chrome.tabs.getCurrent(function (tab) {

            var currentWindowId = tab.windowId;

            chrome.windows.getAll(function (windows) {

                if (windows.length == 1) {
                    chrome.windows.create({
                        url: 'https://www.facebook.com/search/' + id + '/pages-liked/intersect',
                        focused: false
                    }, function (window) {

                    });

                } else {
                    for (var i in windows) {

                        if (currentWindowId !== windows[i].id) {
                            chrome.tabs.create({
                                windowId: windows[i].id,
                                url: 'https://www.facebook.com/search/' + id + '/pages-liked/intersect',
                                active: true
                            }, function () {

                            });

                            break;
                        }

                    }
                }


            });

        });

    };

    $scope.waitingUserList = [];
    $scope.addUser = function () {

        $scope.linkArray = $scope.userLinks.replace(' ', '').split(',');
        for(var i in $scope.linkArray){

            if ($scope.linkArray[i].indexOf('https://www.facebook.com/') !== -1) {
                chrome.tabs.create({
                    url: $scope.linkArray[i],
                    active: false
                }, function () {

                });
                $scope.waitingUserList.push($scope.linkArray[i].split('/')[3].split('?')[0]);
            }

        }


    };

    $scope.deleteUser = function (x) {

        var r = confirm("Are you sure to delete ?");
        if (r == true) {
            $scope.userToScan.$remove(x).then(function(ref) {
                $scope.ranking();
                Materialize.toast('Delete success!!!', 2000);
            });
        }
    };


    chrome.runtime.onMessage.addListener(
        function (request, sender, sendResponse) {

            //getUserId
            if (request.title == 'getMyId') {
                if ($scope.waitingUserList.indexOf(request.data.username) !== -1) {

                    var displayName = request.data.displayName;
                    var username = request.data.username;
                    var userId = request.data.userId;

                    firebase.database().ref().child('userToScan/' + userId).update({
                        displayName: displayName,
                        username: username
                    }, function (error) {
                        if (error) {
                            console.log("Data could not be saved." + error);
                        } else {
                            chrome.tabs.remove(sender.tab.id, function () {
                            });

                            $scope.ranking();
                            $scope.$apply(function () {
                                $scope.userLinks = '';
                            });

                        }
                    });
                }

                sendResponse({title: 'getMyIdDone'});
            }

            //scan liked pages
            if (request.title == 'activeMe') {
                chrome.tabs.update(sender.tab.id, {active: true}, function () {
                });
                sendResponse({title: 'activeDone'});
            }

            if (request.title == 'closeMe') {
                chrome.tabs.remove(sender.tab.id, function () {
                });
                $scope.ranking();
                sendResponse({title: 'closeDone'});
            }

        });


});
